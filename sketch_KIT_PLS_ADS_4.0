#include <SDI12.h>  
    
#include <Wire.h>

#include "ADS1X15.h" //https://github.com/RobTillaart/ADS1X15
ADS1115 ADS(0x48);  // ADS1115 physically defined at address 0x48



    #define SERIAL_BAUD 115200    
    #define DATA_PIN 12        
    
    SDI12 mySDI12(DATA_PIN); 
    
    //SDI 12 commands
    #define myComAdress   "?!"    //ask the adress of the probe
    #define myComId       "0I!"   //ask the identification
    #define myComMeasure  "0M!"   //ask to start a measurement
    #define myComSend     "0D0!"  //ask to send the measure
    #define myComSetUnitCM  "0OSU+0!"  //set the unit
    #define myComUnit     "0OSU!" //ask for the unit of the measure, +0=m, +1=cm, +2=ft, +3=mbar, +4=psi


String readsensor(){ 
  String sdiResponse = "";
  delay(30);
  while(mySDI12.available()){    
    char c = mySDI12.read();
    if ((c != '\n') && (c != '\r')) { sdiResponse += c; delay(5); }    
  }
  return sdiResponse;
}

void measREFsensor(){
  delay(300);      
  mySDI12.sendCommand(myComMeasure);
  while(mySDI12.available()){ mySDI12.read();}    
  delay(1000);    
  mySDI12.clearBuffer();   
  delay(500);
  mySDI12.sendCommand(myComSend);  
  delay(50);
  String rawdata = readsensor();
  mySDI12.clearBuffer();   
  delay(50); 
  
  //Decoding string sent from probe  
  int p=0;
  int pos[] = {0,0};
  for (int z=0 ; z<rawdata.length() ; z++)  {
    char u = rawdata.charAt(z);
    if (u == '+' || u == '-') {
      pos[p] = z ;
      p++; 
    } 
    delay (50);
  }    

  float RealRefLevel = (rawdata.substring(pos[0],pos[1])).toFloat()-1;  //Water level from the reference sensor (without correction)
  String Temperature = rawdata.substring(pos[1],rawdata.length()); //Water temperature from the reference sensor
   
  Serial.print("PLS Raw Data:");
  Serial.println(rawdata);
  delay(50);                         
}

void measADS1115()
{
  // Request for voltage measurement at the ADC (results between -32768 and +32767)
  int16_t count_A0 = ADS.readADC(0);           // Voltage measurement of pin A0, relative to ground
  int16_t count_A1 = ADS.readADC(1);           // Voltage measurement of pin A1, relative to ground 
  int16_t count_A2 = ADS.readADC(2);           // Voltage measurement of pin A2, relative to ground 
  int16_t count_A3 = ADS.readADC(3);           // Voltage measurement of pin A3, relative to ground   
  float f = ADS.toVoltage(1);  // voltage factor
  Serial.print("\tAnalog0: "); Serial.print(count_A0); Serial.print('\t'); Serial.println(count_A0 * f, 30);
  Serial.print("\tAnalog1: "); Serial.print(count_A1); Serial.print('\t'); Serial.println(count_A1 * f, 30);
  Serial.print("\tAnalog2: "); Serial.print(count_A2); Serial.print('\t'); Serial.println(count_A2 * f, 30);
  Serial.print("\tAnalog3: "); Serial.print(count_A3); Serial.print('\t'); Serial.println(count_A3 * f, 30);
  Serial.println();
  delay(1000);
}

void StartRefSensor(){
  mySDI12.begin();
  delay(2000); 
  
  Serial.print(F("'**** Identification of the sensor: "));
  mySDI12.sendCommand(myComId);
  delay(300);
  Serial.println(readsensor());
  delay(500);
  mySDI12.clearBuffer();
  
  Serial.print(F("'**** Adress of the sensor: "));
  mySDI12.sendCommand(myComAdress);
  delay(300);
  Serial.println(readsensor());
  delay(500);
  mySDI12.clearBuffer();

  Serial.print(F("'**** Set the unit of the sensor to be m: "));
  mySDI12.sendCommand(myComSetUnitCM);
  delay(300);
  Serial.println(readsensor());
  delay(500);
  mySDI12.clearBuffer();
  
  Serial.print(F("'**** Unit 0+(0=m, 1=cm, 2=ft, 3=mbar, 4=psi): "));  
  mySDI12.sendCommand(myComUnit);
  delay(300);
  Serial.println(readsensor());
  delay(500);
  mySDI12.clearBuffer();
  }
  

void StartADSSensor()
{
   ADS.begin();
  ADS.setGain(1);      // We take the lowest gain (index 1), to have the measurement range 4.096 volt
  ADS.setMode(1);      // The ADC is told that measurements will be taken on demand, not continuously (0 = CONTINUOUS, 1 = SINGLE)
  ADS.setDataRate(7);  // We specify the speed of voltage measurement we want, from 0 to 7 (7 being the fastest, that is 860 samples per second)
  ADS.readADC(0);      // And we do an empty reading, to send all these parameters
}

    void setup() {
      Serial.begin(115200);
      while (!Serial) {
   ; // wait for serial port to connect. Needed for native USB 
   }
      StartRefSensor();
      StartADSSensor();
    }

void loop() {
      
   measREFsensor();
   measREFsensor();
   measREFsensor();
   measREFsensor();
   measREFsensor();
  for (int i = 0; i <= 100; i++){
    delay(100);
    measADS1115();
    delay(100);
}
   measREFsensor();
   measREFsensor();
   measREFsensor();
   measREFsensor();
   measREFsensor();
  while(1){}
}
